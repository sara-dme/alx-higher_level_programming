Test for 0-add_integer.py
=========================

This module take two integer arguments and returns their sum.

Usage
=====

Import function from the module:
	>>> add_integer = __import__('0-add_integer').add_integer

Addition of two positive arguments:
	>>> add_integer(1, 5)
	6

Addition of one positive and one negative integer:
	>>> add_integer(-2, 4)
	2
	
Addition of two negative integers:
	>>> add_integer(-2, -2)
	-4

Addition of two integer without giving the value of b=98:
	>>> add_integer(2)
	100

Addition of a float and integer:
	>>> add_integer(2.3, 1)
	3

Addition of a two negative float:
	>>> add_integer(-2.1, -2.3)
	-4

Addition of a positive and negative float:
	>>> add_integer(-5.4, 10)
	5

Addition of an integer and a string:
	>>> add_integer(1, "lo")
	Traceback (most recent call last):
	...
	TypeError: b must be an integer

	>>> add_integer('k', 'l')
	Traceback (most recent call last):
	...
	TypeError: a must be an integer

Addition of none:
	>>> add_integer(None)
	...
	Traceback (most recent call last):
	TypeError: a must be an integer

Case NaN:
	>>> add_integer(0, float('nan'))
	Traceback (most recent call last):
	...
	ValueError: cannot convert float NaN to integer
